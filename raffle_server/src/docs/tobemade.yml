openapi: 3.0.0
info:
  title: NFT Ranks
  version: '1.0'
  description: ''
servers:
  - url: 'http://localhost:3033'
    description: local
  - description: server
    url: 'https://nftranks.xyz:3033'
paths:
  '/users/{user_id}':
    parameters:
      - schema:
          type: string
        name: user_id
        in: path
        required: true
    get:
      summary: Get User Info by User ID
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                example-1:
                  value:
                    id: 0
                    createDate: '2019-08-24'
                    nickname: string
                    profile_pic: string
                    status: string
                    wallet:
                      id: 0
                      address: string
                      chainId: 0
        '400':
          description: invalid ID
        '404':
          $ref: '#/components/responses/404'
      operationId: get-users-user_id
      description: Retrieve the information of the user with the matching user ID.
      tags:
        - Users
    patch:
      summary: Update User Information
      operationId: patch-users-user_id
      responses:
        '200':
          description: User Updated
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  result:
                    type: boolean
                required:
                  - result
                x-examples:
                  example-1:
                    result: true
              examples:
                example-1:
                  value:
                    result: true
        '400':
          description: Nickname Already Taken or request validation fail
        '404':
          description: User Not Found
      description: Update the information of an existing user.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                profile_pic:
                  type: string
                nickname:
                  type: string
        description: Patch user properties to update.
      tags:
        - Users
  /users:
    get:
      summary: Get User Info by wallet Address
      responses:
        '200':
          description: User Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                example-1:
                  value:
                    chain_id: 0
                    address: '2019-08-24'
                    user_id: string
                    nickname: string
                    profile_pic: string
                    status: 0
        '400':
          description: 'request validation fail '
        '404':
          $ref: '#/components/responses/404'
      operationId: get-users-by-address
      description: 지갑 연결시 이미 가입된 회원인지 확인함
      parameters:
        - schema:
            type: integer
          in: query
          name: chain_id
          required: true
        - schema:
            type: string
          in: query
          name: address
          required: true
      tags:
        - Users
    post:
      summary: Make New User
      operationId: post-users
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  userID:
                    type: string
        '400':
          description: Conflict - 지갑주소나 닉네임이 겹침
        '404':
          $ref: '#/components/responses/404'
      description: 새로 유저 만듬(신규가입)
      tags:
        - Users
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              x-examples:
                example-1:
                  chain_id: 1
                  address: '0xA96e16Cdc8c47e1E1E754af62a36D0d4ac7B7c67'
                  nickname: kwqeiqw
                  email: bqeuw@gmail.com
                  profile_pic: asdasds
              properties:
                chain_id:
                  type: integer
                address:
                  type: string
                  minLength: 1
                nickname:
                  type: string
                  minLength: 1
                email:
                  type: string
                  minLength: 1
                profile_pic:
                  type: string
                  minLength: 1
              required:
                - chain_id
                - address
                - nickname
                - email
                - profile_pic
          application/xml:
            schema:
              type: object
        description: ''
  /register/nickname:
    get:
      summary: Your GET endpoint
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  result:
                    type: boolean
                required:
                  - result
                x-examples:
                  example-1:
                    result: true
              examples:
                example-1:
                  value:
                    result: true
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
        '409':
          description: Conflict 이미 닉네임있음
      operationId: get-users-nickname
      parameters:
        - schema:
            type: string
          in: query
          name: check_value
          required: true
        - schema:
            type: integer
          in: query
          name: chain_id
          required: true
      description: ''
      tags:
        - Register
  '/rankings/{standard}':
    parameters:
      - schema:
          type: string
        name: standard
        in: path
        required: true
    get:
      summary: Get ranking
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                properties:
                  total:
                    type: integer
                  page:
                    type: integer
                  page_size:
                    type: integer
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/Ranking'
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-rankings-standard
      parameters:
        - schema:
            type: string
          in: query
          name: wallet_addr
          description: Should be hex number
      tags:
        - Rankings
  '/portfolios/basic/{user_id_or_address}':
    parameters:
      - schema:
          type: string
        name: user_id_or_address
        in: path
        required: true
    get:
      summary: Check if user exist by wallet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    updated_at: string
                    user:
                      nickname: string
                      user_id: string
                      badge: 0
                    portfolio:
                      nft_count: 0
                      collection_count: 0
                      ave_holding_period: 0
                      most_collection: 0
                      most_collection_icon: 0
                      'est_market_value ': 0
                      est_market_value _7d: 0
                      holding_value: 0
                      earning_rate: 0
                      earning_rate_7d: 0
                      gas_fee: 0
                      buy_volume: 0
                      buy_volume_7d: 0
                      sell_volume: 0
                      related_addr_count: 0
                      related_addr_dia_count: 0
                      activity_count: 0
                      activity_count_7d: 0
                properties:
                  updated_at:
                    type: string
                    minLength: 1
                  user:
                    type: object
                    required:
                      - nickname
                      - user_id
                      - badge
                    properties:
                      nickname:
                        type: string
                        minLength: 1
                      user_id:
                        type: string
                        minLength: 1
                      badge:
                        type: number
                  portfolio:
                    $ref: '#/components/schemas/Portfolio'
                required:
                  - updated_at
                  - user
              examples:
                example-1:
                  value:
                    updated_at: string
                    user:
                      nickname: string
                      user_id: string
                      badge: 0
                    portfolio:
                      nft_count: 0
                      collection_count: 0
                      ave_holding_period: 0
                      most_collection: 0
                      most_collection_icon: 0
                      'est_market_value ': 0
                      est_market_value _7d: 0
                      holding_value: 0
                      earning_rate: 0
                      earning_rate_7d: 0
                      gas_fee: 0
                      buy_volume: 0
                      buy_volume_7d: 0
                      sell_volume: 0
                      related_addr_count: 0
                      related_addr_dia_count: 0
                      activity_count: 0
                      activity_count_7d: 0
        '404':
          $ref: '#/components/responses/404'
      operationId: get-portfolios-user-id-or-address
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: string
          in: query
          name: chain_id
          required: true
      tags:
        - Portfolios
  '/portfolios/nft/{user_id_or_address}':
    get:
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: string
          in: query
          name: format
        - schema:
            type: integer
          in: query
          name: chain_id
          required: true
      description: NFT탭 재정렬/리프레시할때 사용
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  total:
                    type: integer
                  page:
                    type: integer
                  page_size:
                    type: integer
                  result:
                    type: array
                    items:
                      $ref: '#/components/schemas/NFT'
              examples:
                example-1:
                  value:
                    total: 0
                    page: 0
                    page_size: 0
                    result:
                      - id: string
                        name: string
                        symbol: string
                        token_id: string
                        floor_price: string
                        in_timestamp: string
        '404':
          $ref: '#/components/responses/404'
      operationId: get-portfolios-nft-userid-or-address
      summary: ''
      tags:
        - Portfolios
    parameters:
      - schema:
          type: string
        name: user_id_or_address
        in: path
        required: true
  '/portfolios/stats/{user_id_or_address}':
    parameters:
      - schema:
          type: string
        name: user_id_or_address
        in: path
        required: true
    get:
      summary: Check if user exist by wallet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
        '404':
          $ref: '#/components/responses/404'
      operationId: get-portfolios-stats
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: string
          in: query
          name: format
          description: 정렬 기준
        - schema:
            type: string
          in: query
          name: chain_id
          required: true
      tags:
        - Portfolios
  '/portfolios/activity/{user_id_or_address}':
    parameters:
      - schema:
          type: string
        name: user_id_or_address
        in: path
        required: true
    get:
      summary: Check if user exist by wallet
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                description: ''
                type: object
                x-examples:
                  example-1:
                    total: 0
                    page: 0
                    page_size: 0
                    result:
                      - id: string
                        name: string
                        symbol: string
                        token_id: string
                        floor_price: string
                        in_timestamp: string
                properties:
                  total:
                    type: number
                  page:
                    type: number
                  page_size:
                    type: number
                  result:
                    type: array
                    uniqueItems: true
                    minItems: 1
                    items:
                      $ref: '#/components/schemas/NFTActivity'
                required:
                  - total
                  - page
                  - page_size
                  - result
              examples:
                example-1:
                  value:
                    total: 0
                    page: 0
                    page_size: 0
                    result:
                      - activity_id: string
                        in_timestamp: string
                        state: int
                        collection:
                          icon: string
                          id: string
                          name: string
                          token_address: string
                        token_id: int
                        from_address: string
                        value: number
                        gas: number
                        transaction_hash: string
            application/xml:
              schema:
                type: object
        '400':
          $ref: '#/components/responses/400'
        '404':
          $ref: '#/components/responses/404'
      operationId: get-portfolios-activity
      parameters:
        - schema:
            type: integer
          in: query
          name: offset
        - schema:
            type: integer
          in: query
          name: limit
        - schema:
            type: string
          in: query
          name: cursor
        - schema:
            type: string
          in: query
          name: format
          description: 정렬 기준
        - schema:
            type: string
          in: query
          name: chain_id
          required: true
        - schema:
            type: string
          in: query
          name: user_id
        - schema:
            type: string
          in: query
          name: address
      tags:
        - Portfolios
      description: ''
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      properties:
        chain_id:
          type: integer
          description: Unique identifier for the given user.
        address:
          type: string
          format: date
          description: The date that the user was created.
        user_id:
          type: string
        nickname:
          type: string
        profile_pic:
          type: string
        status:
          type: integer
      required:
        - chain_id
        - address
        - user_id
    Wallet:
      title: Wallet
      type: object
      description: ''
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        address:
          type: string
        chainId:
          type: integer
      required:
        - id
        - address
        - chainId
    Portfolio:
      description: ''
      type: object
      x-examples: {}
      properties:
        portfolio:
          type: object
          properties:
            nft_count:
              type: number
            collection_count:
              type: number
            ave_holding_period:
              type: number
            most_collection:
              type: number
            most_collection_icon:
              type: number
            'est_market_value ':
              type: number
            est_market_value _7d:
              type: number
            holding_value:
              type: number
            earning_rate:
              type: number
            earning_rate_7d:
              type: number
            gas_fee:
              type: number
            buy_volume:
              type: number
            buy_volume_7d:
              type: number
            sell_volume:
              type: number
            related_addr_count:
              type: number
            related_addr_dia_count:
              type: number
            activity_count:
              type: number
            activity_count_7d:
              type: number
    NFT:
      title: NFT
      type: object
      properties:
        collection_name:
          type: string
        nft_name:
          type: string
        symbol:
          type: string
        token_id:
          type: string
        floor_price:
          type: string
        in_timestamp:
          type: string
      description: ''
    Ranking:
      title: Ranking
      type: object
      properties:
        ranking:
          type: string
        user:
          $ref: '#/components/schemas/User'
        portfolio:
          $ref: '#/components/schemas/Portfolio'
        activity_num:
          type: integer
        profit_7D:
          type: number
        profit_24H:
          type: number
    NFTActivity:
      description: ''
      type: object
      x-examples:
        example-1:
          activity_id: string
          in_timestamp: string
          state: int
          collection:
            icon: string
            id: string
            name: string
            token_address: string
          token_id: int
          from_address: string
          value: number
          gas: number
          transaction_hash: string
      properties:
        activity_id:
          type: string
          minLength: 1
        in_timestamp:
          type: string
          minLength: 1
        type:
          type: string
          minLength: 1
          description: |-
            0 buy
            1 sell
            2 mint
            3 burn
            4 send
            5 receive
        collection:
          type: object
          required:
            - icon
            - id
            - name
            - token_address
          properties:
            icon:
              type: string
              minLength: 1
            id:
              type: string
              minLength: 1
            name:
              type: string
              minLength: 1
            token_address:
              type: string
              minLength: 1
        token_id:
          type: string
          minLength: 1
        from_address:
          type: string
          minLength: 1
        value:
          type: number
        gas:
          type: number
        transaction_hash:
          type: string
          minLength: 1
      required:
        - activity_id
        - in_timestamp
        - type
        - collection
        - token_id
        - gas
        - transaction_hash
  responses:
    '400':
      description: Bad Request - 주소가 hex number양식이 아닌 경우
      content:
        application/json:
          schema:
            properties:
              id:
                type: string
          examples:
            example-1:
              value:
                id: error
    '404':
      description: 경로 못찾는 에러 + 데이터 없음
      content:
        application/json:
          schema:
            description: ''
            type: object
            properties:
              message:
                type: string
                minLength: 1
            required:
              - message
          examples:
            example-1:
              value:
                message: string
